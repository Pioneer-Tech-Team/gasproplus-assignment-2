generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(60)
  accounts Account[]
  vouchers Voucher[]
}

model Account {
  id        Int     @id @default(autoincrement())
  parent_id Int?    // null if no parent
  is_group  Boolean
  name      String  @db.VarChar(60)
  companyId Int
  company   Company @relation(fields: [companyId], references: [id])

  parent   Account?  @relation("Parent", fields: [parent_id], references: [id])
  children Account[] @relation("Parent")

  voucherDetails VoucherDetail[] //for voucher details
}

model Voucher {
  id            Int             @id @default(autoincrement())
  voucherNo     Int             @unique
  voucherDate   DateTime
  amount        Decimal         @db.Decimal(15, 2)
  narration     String?         @db.VarChar(255)
  voucherTypeId Int
  companyId     Int
  voucherType   VoucherType     @relation(fields: [voucherTypeId], references: [id], onDelete: Cascade) //Cascade on del
  company       Company         @relation(fields: [companyId], references: [id])
  details       VoucherDetail[]
}

model VoucherDetail {
  id        Int     @id @default(autoincrement())
  voucherId Int
  amount    Decimal @db.Decimal(15, 2)
  drcr      Int     // 1 for Dr, -1 for Cr
  remark    String? @db.VarChar(30)
  accountId Int?    // for referencing affected accountid

  voucher Voucher @relation(fields: [voucherId], references: [id])
  account Account? @relation(fields: [accountId], references: [id]) 
}

model VoucherType {
  id           Int              @id @default(autoincrement())
  shortForm    String           @unique @db.VarChar(4)
  name         String           @db.VarChar(32)
  drFilter     String?          @db.VarChar(1024)
  crFilter     String?          @db.VarChar(1024)
  relationship RelationshipEnum
  manyDr       Boolean
  manyCr       Boolean

  vouchers Voucher[]
}

model VoucherNos {
  series String @id @db.VarChar(12)
  lastNo Int
}

// Enum type for relationship
enum RelationshipEnum {
  one_to_one
  one_to_many
  many_to_one
  many_to_many
}
